#pragma checksum "C:\Users\harut\OneDrive\Рабочий стол\gas.station\src\Gas.Admin\Views\Shared\Table\_ListDeleteScripts.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "770fb9863719ea895113cdd9ca22e1a7c9c09df9"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared_Table__ListDeleteScripts), @"mvc.1.0.view", @"/Views/Shared/Table/_ListDeleteScripts.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\harut\OneDrive\Рабочий стол\gas.station\src\Gas.Admin\Views\_ViewImports.cshtml"
using Gas.Admin;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\harut\OneDrive\Рабочий стол\gas.station\src\Gas.Admin\Views\_ViewImports.cshtml"
using Gas.Admin.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"770fb9863719ea895113cdd9ca22e1a7c9c09df9", @"/Views/Shared/Table/_ListDeleteScripts.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5a67073476b22c37699e082863fa1a91950662fe", @"/Views/_ViewImports.cshtml")]
    public class Views_Shared_Table__ListDeleteScripts : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<div id=""DeleteModelHolder""></div>
<script>
$(document).ready(function() {
    
    var deleteAllBtnSelect = '#deleteAllBtn';
    var itemsSelect = '.selItems';
    var itemsSelectAll = '.selectElems';
    var deleteItemBtnSelect = '.deleteElem';
    
    
    $(deleteItemBtnSelect).click(function(e) {
        let list = [];
        list.push($(this).data('id'))
        let url = $(this).data('url');
        
        let data = {};
        data['Ids'] = list;
        data['ReturnUrl'] = $(this).data('returnurl');
        data['Url'] = $(this).data('deleteurl');
        
        fetchAndDisplayDeleteModal(url, data);
    });
    
    $(deleteAllBtnSelect).click(function(e) {
        if (areAllUnchecked())
            return;
        
        let list = []
        $(itemsSelect).each(function(e) {
            if ($(this).is(':checked'))
                found = false;
            
            list.push($(this).data('id'));
        })
        let url = $(this).data('url');
     ");
            WriteLiteral(@"   
        let data = {};
        data['Ids'] = list;
        data['ReturnUrl'] = $(this).data('returnurl');
        data['Url'] = $(this).data('deleteurl');
        
        fetchAndDisplayDeleteModal(url, data);
    });
    $(itemsSelectAll).click(function(e) {
        checkAll($(this).is(':checked'));
    });
    $(itemsSelect).click(function(e) {
        checkSelectAllStatus();
    });
    function checkAll(status) {
        $(itemsSelect).each(function(e) {
            $(this).prop('checked', status);
        });
    }
    function checkSelectAll(status) {
        $(itemsSelectAll).each(function(e) {
            $(this).prop('checked', status);
        });
    }
    function checkSelectAllStatus() {
            checkSelectAll(areAllChecked());
    }
    function areAllUnchecked() {
        var found = true;
        
        $(itemsSelect).each(function(e) {
            if ($(this).is(':checked'))
                found = false;
        });
        
        return found;");
            WriteLiteral(@"
    }
    function areAllChecked() {
        var found = false;
        $(itemsSelect).each(function(e) {
            if (!$(this).is(':checked'))
                found = true;
        });
        return !found;
    }
    function fetchAndDisplayDeleteModal(url, data) {
        $.ajax({
                        method: 'post',
                        url: url,
                        data: JSON.stringify(data),
                        contentType: ""application/json; charset=utf-8"",
                        success: function (data) {
                            $('#DeleteModelHolder').html(data);
                            $('#deleteModel').modal('show');
                        },
                        error: function(data) {
                            console.log(data)
                        }
                    });
    }
    
    function deleteItem(url, data) {
        $.ajax({
                method: 'post',
                url: url,
                data: JSON.stringify(");
            WriteLiteral("data),\r\n                contentType: \"application/json; charset=utf-8\",\r\n                dataType: \"json\",\r\n                success: function (data) {\r\n                    location.reload();\r\n                }\r\n            });\r\n    }\r\n});\r\n</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
